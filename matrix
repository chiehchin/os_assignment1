#!/bin/bash
#Name:Chieh-Chin Tao
#ID:933320456
#Program:Matrix
#By using array to practice




#Declare two matrics 
declare -A matrix1
declare -A matrix2



#Function declartion for reading matrix from first file
readfile()
{
	rows=0
	while read line 
	do
		columns=0
		for i in $line 
		do		
			matrix1[$rows,$columns]=$i
			((columns++))
 	
 		done
		((rows++))
	done < $1
}



#1.Detect the file's status.
#2.If not readable and found, then return error to stdrr.  
if ! [ -r $2 ]
then
        echo "File is not readable and found!" 1>&2
        exit 1
fi
if ! [ -f $2 ]
then
        echo "File is not found!" 1>&2
        exit 1
fi



#If there exist second matrix, then read it. 
if [ $# == 3 ]
then
	rows2=0
	while read line 
	do
        	columns2=0
       	 	for i in $line
        	do
                	matrix2[$rows2,$columns2]=$i
                	((columns2++))

        	done
        	((rows2++))
	done < $3
fi





#1.If the first argument = dims, then execute the "dims"
#2.Calculat the dimension of the matrix as the number of rows and columns.
#3.If the arguments are more than two(not including two), then there are too many arguments, returen error. 
#4.Call the function "readfile" to read the file, and use ${2:-/dev/stdin} to get the file from 
#  either argument or stdin
if [ "$1" == "dims" ]
then
	if (( $# > 2 )) 
        then
                echo "parameters error!!" 1>&2
                exit 1
        fi

	readfile ${2:-/dev/stdin}	
	
	if [ $# < 4 ]
	then
		echo -n "$rows "
        	echo -n "$columns"
		echo 
	fi




#1.If the first argument = transpose, then execute the "transpose"
#2.Exchanging the matrix's dimension of the number of columns and rows. 
#3.If it is not the last element of every column, then add tab between each element. 
elif [ "$1" == "transpose" ] 
then
	
	readfile ${2:-/dev/stdin}

	for((i=0;i<columns;i++))
	do
        	for((j=0;j<rows;j++))
        	do
	               	echo -n "${matrix1[$j,$i]}"
			if [ "$j" != "$(($rows - 1))" ]
			then	
				echo -n "	"
			fi
		done
		echo""
	done
	


#1.If the first argument = mean, then execute the "mean"
#2.Calculate the mean of every column.
#3.Call the function "readfile" to read the file, and use ${2:-/dev/stdin} to get the file from 
#  either argument or stdin
#4.Sum up each column.
#5.Use (a + (b/2)*( (a>0)*2-1 )) / b for round value.
#6.If it is not the last element of every column, then add tab between each element.  
elif [ "$1" == "mean" ]
then
	readfile ${2:-/dev/stdin}

	sum=0
	for((j=0;j<columns;j++))
	do
        	for((i=0;i<rows;i++))
		do
			sum=$(expr $sum + ${matrix1[$i,$j]})
		done
		mean=0
		mean=$(( ($sum + ($rows / 2) * (($sum > 0) * 2 - 1)) / $rows ))
		echo -n "$mean"
		if [ "$j" != "$(($columns - 1))" ]
                then
                       echo -n "	"
        	fi
		sum=0
		
	done
	echo ""



#1.If the first argument = add, then execute the "add"
#2.If the argument is less than two, it can't be calculated. Return error.
#3.Call the function "readfile" to read the file, and use ${2:-/dev/stdin} to get the file from 
#  either argument or stdin 
#4.If these two matrics' dimension are same, then calculate.
#  If not, return error to stderr. 
#5.Add the matching elements.    
#6.If it is not the last element of every column, then add tab between each element. 
elif [ "$1" == "add" ]
then
	if (( $# < 3 ))
	then
		echo "parameters error!!" 1>&2
		exit 1
	fi
	
	readfile ${2:-/dev/stdin}

	if [[ ("$columns" == "$columns2") && ("$rows" == "$rows2") ]]
	then
        	for((i=0;i<rows;i++))
        	do
        		for((j=0;j<columns;j++))
                	do
                        	sum=$(expr ${matrix1[$i,$j]} + ${matrix2[$i,$j]})
                        	echo -n "$sum"
				if [ "$j" != "$(($columns - 1))" ]
				then
					echo -n "	"
				fi
                	done
              		echo "" 
		done
        	sum=0
	else
        	echo "Adding incompitable matrix! " 1>&2 
		exit 1
	fi





#1.If the first argument = multiply, then execute the "multiply"
#2.Call the function "readfile" to read the file, and use ${2:-/dev/stdin} to get the file from 
#  either argument or stdin 
#3.First matrix column need to be exactly same as second matrix row.
#  If not, return error to stderr.
#4.Mutiply the matching element, and then sum up.
#5.If it is not the last element of every column, then add tab between each element. 
elif [ "$1" == "multiply" ]
then
	readfile ${2:-/dev/stdin}
	multuply=0
	sum=0
	if [ "$columns" == "$rows2" ]
	then

        	for((i=0;i<rows;i++))
        	do
                	for((j=0;j<columns2;j++))
                	do
                        	multiply=0
                        	for((k=0;k<columns;k++))
                        	do
                                	multiply=$(( ${matrix1[$i,$k]} * ${matrix2[$k,$j]} ))
                                	sum=$(($sum + $multiply ))

                        	done
                        	echo -n "$sum"
				if [ "$j" != "$(($columns2 - 1))" ]
                                then
                                        echo -n "	" 
                                fi
	                   	sum=0
                	done
                	echo ""
        	done
	else
        	echo "Multiplying incompitable matrix! " 1>&2
		exit 1
	fi

else
	echo "Error! " 1>&2
        exit 1
fi














